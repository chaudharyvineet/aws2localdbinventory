import requests
import time
from requests.auth import HTTPBasicAuth

# Jenkins configuration
JENKINS_URL = 'http://your-jenkins-url:8080'  # Replace with your Jenkins URL
JENKINS_USER = 'your-jenkins-username'        # Replace with your Jenkins username
JENKINS_API_TOKEN = 'your-jenkins-api-token'  # Replace with your Jenkins API token
JOB_NAME = 'your-job-name'                    # Replace with your Jenkins job name

def trigger_jenkins_build():
    # URL to trigger the Jenkins job
    trigger_url = f'{JENKINS_URL}/job/{JOB_NAME}/build/api/json'
    
    # Trigger the build
    response = requests.post(trigger_url, auth=HTTPBasicAuth(JENKINS_USER, JENKINS_API_TOKEN))

    if response.status_code == 201:
        print('Build triggered successfully.')
    else:
        print(f'Failed to trigger build. Status code: {response.status_code}')
        return None
    
    # Fetch the queue item to get the build number
    queue_url = f'{JENKINS_URL}/job/{JOB_NAME}/lastBuild/api/json'
    queue_response = requests.get(queue_url, auth=HTTPBasicAuth(JENKINS_USER, JENKINS_API_TOKEN))

    if queue_response.status_code == 200:
        queue_data = queue_response.json()
        return queue_data['number']  # The build number
    else:
        print(f'Failed to get queue status. Status code: {queue_response.status_code}')
        return None

def show_build_logs(build_number):
    console_url = f'{JENKINS_URL}/job/{JOB_NAME}/{build_number}/consoleText'
    response = requests.get(console_url, auth=HTTPBasicAuth(JENKINS_USER, JENKINS_API_TOKEN))

    if response.status_code == 200:
        print(response.text)
    else:
        print(f'Error fetching build logs. Status code: {response.status_code}')

def wait_for_build_to_complete(build_number):
    build_url = f
